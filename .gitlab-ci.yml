stages:
  - pull the code
  - compile angular
  - build image
  - stop running container
  - remove previously running container
  - run container

pull:
  stage: pull the code
  before_script:
    - cd /home/ubuntu/bits4cash/frontend4cash
    - git reset --hard ${CI_COMMIT_REF_NAME}
  script:
    - git pull git@gitlab.cs.ttu.ee:kigris/frontend4cash.git ${CI_COMMIT_REF_NAME}

compile:
  stage: compile angular
  before_script:
    - cd /home/ubuntu/bits4cash/frontend4cash
    - npm i
    - npm ci
  script:
    - ng build --prod=true

build:
  stage: build image
  before_script:
    - cd /home/ubuntu/bits4cash/frontend4cash
    - source .${CI_COMMIT_REF_NAME}.env
  script: docker build -t $IMAGE_NAME .
  after_script:
    # after we build the image, completely remove built stuff so no disk space is taken (we dont have much disk space left, pls send help)
    - rm -rf dist/*

stop:
  stage: stop running container
  allow_failure: true
  script:
    - docker stop $(docker ps -f "name=frontend4cash" -q)

remove:
  stage: remove previously running container
  allow_failure: true
  script:
    - docker container rm $(docker ps -af "name=frontend4cash" -q)

deploy:
  stage: run container
  before_script:
    - cd /home/ubuntu/bits4cash/frontend4cash
    - source .${CI_COMMIT_REF_NAME}.env
    - cd ..
    - pwd
    - cat letsencrypt/options-ssl-nginx.conf
  script: docker container run -d --name $APP_NAME --net=$NETWORK_NAME --net-alias=$APP_NAME -v $(readlink -f letsencrypt):/etc/letsencrypt -v ~/logs4front:/var/log/nginx/ -p 80:80 -p 430:430 $IMAGE_NAME
# i am a comment for test
